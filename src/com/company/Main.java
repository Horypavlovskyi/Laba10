//10 Блоки инициализации (Практика)
//        1 Создание класса с блоком инициализации
//        1.1 Создать класс Film. Описать поля: Название, продолжительность, жанр. Создать
//        конструктор с параметрами, геттеры и сеттеры.
//        1.2 Добавить константные поля жанров, например: комедия, фантастика, ужасы.
//        Примечание, для создания экземпляра класса Film, пользоваться этими константами.
//        1.3 Добавить блок инициализации в котором вывести на экран сообщение: «Создается
//        новый Фильм».
//        В конструкторе добавить вывод на экран сообщение: «Фильм “название”, успешно
//        создана.»
//        2 Создать класс Library.
//        Описать поля: Массив из фильмов, название библиотеки.
//        Добавить блок инициализации в котором создается массив (с размером 5) для поля
//        списка фильмов.
//        2.1 Поле экземпляра класса «имя» пометить модификатором final.
//        2.2 Заполнить первые 2 элемента массива прямо в блоке инициализации. Создать 2 своих
//        любимых фильма, и добавить в массив.
//        2.3 Вывести сообщения на экран: “Добавлены любимые фильмы”
//        2.4 Добавить конструктор для класса Library, который принимает и инициализирует имя
//        библиотеки. Вывести сообщение на экран: «Библиотека “название”, успешно создана.»
//        2.5 Создать геттеры для полей имя и список фильмов.
//        3 Создать класс Main c методом main.
//        В методе main создать экземпляр класса Library.
//        Запустить программу, проверить порядок вывода сообщений.
//        4 Написать метод, который находит первую пустую ячейку массива с фильмами и
//        возвращает индекс, если массив полностью заполнен возвращает -1.
//        4.1 В методе main реализовать проверку на наличие пустой ячейки и добавить в нее новый
//        фильм, если пустой ячейки уже нет – вывести сообщение: «Вы достигли лимита».
//        4.2 Запустить, проверить результат выполнения программы
//        4.3 Повторить шаги 4.1 - 4.2, пока не будет достигнут лимит.
//        5 Написать JavaDoc для классов и методов

package com.company;

import java.util.Arrays;
import java.util.SortedMap;

/**
 * This is my Main Class, I will write my code
 */
public class Main {


    /**
     * Here start point of the program
     * @param args command line values
     */
    public static void main(String[] args) {
        // write your code here
        Film film1 = new Film("Один дома", "01:20", Film.COMEDY);
        Film film2 = new Film("Аватар", "02:30", Film.FANTASY);
        Film film3 = new Film("От заката до рассвета", "01:40", Film.HORROR);

//        Film[] films = {film1,film2,film3};
//        for (Film film : films) {
//            System.out.println("Фильм " + film + " успешно создан.");
//        }

        Library library = new Library("КиноПоиск");
//        System.out.println(library.returnArray());
//        System.out.println(library.addFilm());
        System.out.println(library.implementCheck("Wolf"));
        System.out.println(library.implementCheck("Factor"));
        System.out.println(library.implementCheck("Rain"));
        System.out.println(library.implementCheck("Mag"));


//        static {
//            System.out.println("«Создается новый Фильм»");
//        }


    }
}

